name: Unit Tests

on:
  push:
    branches: [ main ]

jobs:
  unit-tests:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install coverage

    - name: Run unit tests with coverage report
      run: |
        python -m coverage run -m unittest discover -s ./ -p 'test_*.py'
        python -m coverage report -m

    - name: Run all tests from tester.py
      run: |
        python -m unittest discover -s ./ -p 'tester.py'

    - name: Test import_students function
      run: |
        python -c "from main import import_students; print(import_students('students.csv'))"

    - name: Test export_students function
      run: |
        python -c "from main import export_students; export_students('students.csv', ['John Doe', 'Jane Doe'])"

    - name: Test add_student function
      run: |
        python -c "from main import add_student; students = ['John Doe']; add_student(students, 'Jane Doe'); print(students)"

    - name: Test update_student_file function
      run: |
        python -c "from main import update_student_file; update_student_file('students.csv', ['John Doe', 'Jane Doe'])"

    - name: Test check_attendance function
      run: |
        python -c "from main import check_attendance; print(check_attendance(['John Doe', 'Jane Doe']))"

    - name: Test manage_attendance_data function
      run: |
        python -c "from main import manage_attendance_data; print(manage_attendance_data(['John Doe', 'Jane Doe']))"

    - name: Create Issues with TODO
      uses: todo/todo-action@v1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        annotations: true
        exclude: 'node_modules/**, vendor/**'
        include: '**/*.py'
        create-issue: true
        labels: 'todo'

    - name: SuperLint formatting (optional)
      uses: super-linter/super-linter@v4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        linters: 'flake8'
        format: true
